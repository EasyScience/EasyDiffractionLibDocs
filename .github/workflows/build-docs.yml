name: Build and deploy static site

on:
  # Trigger the workflow on push
  push:
    # Every branch 
    branches:
      - "**"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Set environment variable for the branch name
  # NOTE: Use the same branch name as the one of EasyDiffractionLib. This is
  # required to download the Jupyter notebooks from the EasyDiffractionLib repository
  CI_BRANCH: develop  # ${{ github.head_ref || github.ref_name }}

jobs:

  # Job 1: Build the static files for the documentation site
  build-docs:

    runs-on: macos-14  # Use macOS to switch to dark mode for Plotly charts

    steps:
      - name: Cancel previous workflow runs
        uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Activate dark mode to create documentation with Plotly charts in dark mode
      # Need a better solution to automatically switch the chart colour theme based on the mkdocs material switcher
      # Something similar to mkdocs_plotly_plugin https://haoda-li.github.io/mkdocs-plotly-plugin/,
      # but for generating documentation from notepads
      - name: Activate dark mode
        run: |
          brew install dark-mode
          dark-mode status
          dark-mode on
          dark-mode status

      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
            python-version: '3.12'

      # Install MkDocs -- static site generator
      # https://www.mkdocs.org
      - name: Install MkDocs and its dependencies
        run: >
          pip install 
          mkdocs 
          mkdocs-material 
          mkdocs-jupyter
          mkdocs-plugin-inline-svg

      # Install EasyDiffractionLib to run Jupyter notebooks
      # Install with the [charts] extra
      # Install from the same branch as the current one (CI_BRANCH)
      - name: Install EasyDiffractionLib and its dependencies
        run: pip install 'easydiffraction[charts] @ git+https://github.com/EasyScience/EasyDiffractionLib@${{ env.CI_BRANCH }}'

      # Create directories for extra files copied in the next steps
      - name: Create directories for extra files
        run: |
          mkdir -p docs/assets/images/
          mkdir -p docs/assets/javascripts/
          mkdir -p docs/assets/stylesheets/
          mkdir -p overrides/
          mkdir -p overrides/partials/
          mkdir -p overrides/.icons/

      # Download and add the extra files from the CommonDocsAssets repository
      - name: Copy CommonDocsAssets Files
        run: |
          git clone https://github.com/EasyScience/CommonDocsAssets.git
          cp CommonDocsAssets/docs/assets/javascripts/extra.js docs/assets/javascripts/
          cp CommonDocsAssets/docs/assets/stylesheets/extra.css docs/assets/stylesheets/
          cp CommonDocsAssets/overrides/main.html overrides/
          cp CommonDocsAssets/overrides/partials/logo.html overrides/partials/
          cp CommonDocsAssets/overrides/.icons/google-colab.svg overrides/.icons/

      # Download and add the extra files from the BrandingResources repository
      - name: Copy BrandingResources Files
        run: |
          git clone https://github.com/EasyScience/BrandingResources.git
          cp BrandingResources/EasyDiffraction/logos/edl-logo_dark.svg docs/assets/images/easydiffractionlib_dark.svg
          cp BrandingResources/EasyDiffraction/logos/edl-logo_light.svg docs/assets/images/easydiffractionlib_light.svg
          cp BrandingResources/EasyDiffraction/icons/ed-icon_256x256.png docs/assets/images/favicon.png
          cp BrandingResources/EasyDiffraction/icons/ed-icon_bw.svg overrides/.icons/easydiffraction.svg
          cp BrandingResources/EasyScience/icons/es-icon_bw.svg overrides/.icons/easyscience.svg

      # Download Jupyter notebooks from EasyDiffractionLib to the examples folder
      # The notebooks are used to generate the documentation
      # Download from the same branch as the current one (CI_BRANCH)
      - name: Download Jupyter notebooks from EasyDiffractionLib
        run: |
          cd docs/
          curl https://codeload.github.com/easyscience/EasyDiffractionLib/tar.gz/${{ env.CI_BRANCH }} | tar -xz --strip=1 EasyDiffractionLib-${{ env.CI_BRANCH }}/examples

      # The following step is needed to avoid the following message during the build:
      # "Matplotlib is building the font cache; this may take a moment"
      - name: Pre-build site step
        run: python -c "import easydiffraction"

      # Build the static files
      # Input: docs/ directory containing the Markdown files
      # Output: site/ directory containing the generated HTML files
      - name: Build site with MkDocs
        run: mkdocs build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Upload the static files from the site/ directory to be used in the next job
      # This artifact is named github-pages and is a single gzip archive containing a single tar file
      # The artifact is then used in the next job by actions/deploy-pages to deploy the static files to GitHub Pages
      # Unfortunately, the artifact is not available for download, so extra steps below are needed to do similar things
      - name: Upload built site as artifact (for github-pages)
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/

      # Upload the static files from the site/ directory to be used in the next job
      # This extra step is needed to allow the download of the artifact in the next job
      # for pushing its content to the branch named 'easydiffraction.org'
      - name: Upload built site as artifact (for easydiffraction.org, master branch)
        if: ${{ env.CI_BRANCH == 'master' }}
        uses: actions/upload-artifact@v4
        with:
          name: artifact # name of the artifact (without the extension zip)
          path: site/
          if-no-files-found: "error"
          compression-level: 0

  # Job 2: Deploy the static files
  # To allow the deployment of the static files to GitHub Pages
  # No restrictions on the branch name is set on https://github.com/EasyScience/EasyDiffractionLibDocs/settings/environments
  deploy-docs:
    needs: build-docs  # previous job 'build-docs' need to be finished first

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      contents: read
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment, originates from an appropriate source

    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: "pages"
      cancel-in-progress: false

    # Deploy to the github-pages environment
    environment:
      name: github-pages # Artifact name
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      # Deploy the static files created in the previous job to GitHub Pages
      # All branches are deployed to GitHub Pages and available at
      # https://easyscience.github.io/EasyDiffractionLibDocs
      # This is needed for debugging purposes
      - name: Deploy to easyscience.github.io/EasyDiffractionLibDocs (all branches)
        uses: actions/deploy-pages@v4

      - name: Download built site as artifact from previous job (for easydiffraction.org, master branch)
        if: ${{ env.CI_BRANCH == 'master' }}
        uses: actions/download-artifact@v4
        with:  # name or path are taken from the upload step of the previous job
          name: artifact
          path: site/ # directory to extract downloaded zipped artifacts

      # Push the site files created in the previous job to the 'easydiffraction.org' branch
      # This branch is used to deploy the site to the custom domain https://easydiffraction.org
      # Deploying is done with a webhook: https://github.com/EasyScience/EasyDiffractionLibDocs/settings/hooks
      # This is done for the 'master' branch only, when the site is tested with a step above
      - name: Deploy to easydiffraction.org (master branch)
        if: ${{ env.CI_BRANCH == 'master' }}
        uses: s0/git-publish-subdir-action@develop
        env:
          GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}
          REPO: self
          BRANCH: public_master  # easydiffraction.org
          FOLDER: site
